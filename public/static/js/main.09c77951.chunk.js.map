{"version":3,"sources":["pages/Recipe/Recipe.module.css","services/auth.service.js","context/auth.context.js","components/AnounRoute/AnounRoute.js","components/PrivateRoute/PrivateRoute.js","services/recipes.service.js","components/RecipeForm/RecipeForm.js","pages/CreateRecipe/CreateRecipe.js","pages/EditRecipe/EditRecipe.js","pages/EditUser/EditUser.js","pages/Home/Home.js","components/RecipeCard/RecipeCard.js","components/MyRecipes/MyRecipes.js","pages/Recipes/Recipes.js","components/RecipeDetail/RecipeDetail.js","pages/Recipe/Recipe.js","components/UserForm/UserForm.js","pages/Signup/Signup.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","AuthService","signup","data","instance","post","login","logout","isLoggedIn","get","edit","put","this","axios","create","baseURL","process","withCredentials","React","createContext","Consumer","Provider","AuthProvider","state","isLoading","user","authService","a","response","setState","then","catch","error","console","result","value","props","children","Component","withAuth","WrappedComponent","routeProps","exact","path","redirectPath","ComponentToShow","component","render","to","RecipeService","getOne","id","deleteOne","delete","updateOne","validators","dishName","message","length","ingredients","preparation","prepTime","howToCook","cousine","log","type","image","RecipeForm","fields","redirect","errors","recipeService","event","preventDefault","isValid","err","target","name","Object","keys","some","key","refreshState","className","onSubmit","handleSubmit","htmlFor","onChange","handleChange","style","color","disabled","CreateRecipe","EditRecipe","match","params","uploadData","withRouter","username","password","email","EditUser","uploadOne","onClick","e","placeholder","recipesService","RecipesService","class","src","alt","handleLogout","recipes","res","map","recipe","displayRecipes","Main","RecipesDetail","EMAIL_PATTERN","test","UserForm","Signup","Home","Recipes","Recipe","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09c77951.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title-box-rd\":\"Recipe_title-box-rd__2c-bX\",\"title-text-rd\":\"Recipe_title-text-rd__WUgjD\",\"recipe-detail-box\":\"Recipe_recipe-detail-box__1Zr__\",\"recipe-rd\":\"Recipe_recipe-rd__28k10\"};","import axios from 'axios';\r\n\r\nexport default class AuthService{\r\n  constructor(){\r\n    this.instance = axios.create({\r\n      baseURL: process.env.REACT_APP_API_URL,\r\n      withCredentials: true\r\n    })\r\n  }\r\n\r\n  signup = (data) => this.instance.post('/auth/signup', data);\r\n  login = (data) => this.instance.post('/auth/login', data);\r\n  logout = () => this.instance.post('/auth/logout');\r\n  isLoggedIn = () => this.instance.get('/auth/loggedin');\r\n  edit = (data) => this.instance.put('/auth/edit-user', data);\r\n}","import React from 'react';\r\nimport AuthService from '../services/auth.service';\r\n\r\nconst { Consumer, Provider } = React.createContext();\r\n\r\nclass AuthProvider extends React.Component{\r\n  state = {\r\n    isLoggedIn: false,\r\n    isLoading: true,\r\n    user: null\r\n  }\r\n\r\n  authService = new AuthService();\r\n\r\n  async componentDidMount(){\r\n    try {\r\n      const result = await this.authService.isLoggedIn();\r\n      if(result){\r\n        this.setState({ isLoggedIn: true, isLoading: false, user: result.data });\r\n      }\r\n    } catch(err){\r\n      this.setState({ isLoggedIn: false, isLoading: false, user: null });\r\n    }\r\n  }\r\n\r\n  signup = async (data) => {\r\n    try {\r\n      const response = await this.authService.signup(data);\r\n      if(response){\r\n        this.setState({ isLoggedIn: true, user: response.data })\r\n      }\r\n    } catch(err){\r\n      this.setState({ isLoggedIn: false, user: null })\r\n    }\r\n  }\r\n\r\n  login = (data) => {\r\n    this.authService.login(data)\r\n    .then(response => this.setState({ isLoggedIn: true, user: response.data }))\r\n    .catch(() => this.setState({ isLoggedIn: false, user: null }))\r\n  }\r\n\r\n  logout = () => {\r\n    this.authService.logout()\r\n    .then(() => this.setState({ isLoggedIn: false, user: null }))\r\n    .catch(error => console.error(error))\r\n  }\r\n\r\n  edit = (data) => {\r\n    this.authService.edit(data)\r\n    .then(response => this.setState({ ...this.state, user: response.data }))\r\n    .catch(error => console.error(error))\r\n  }\r\n\r\n  render(){\r\n    const { isLoggedIn, isLoading, user } = this.state;\r\n\r\n    if(isLoading) return <p>Loading...</p>;\r\n\r\n    return (\r\n      <Provider value={{ isLoading, isLoggedIn, user, signup: this.signup, login: this.login, logout: this.logout, edit: this.edit }}>\r\n        {this.props.children}\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nconst withAuth = (WrappedComponent) => {\r\n\r\n  return function(props){\r\n    return (\r\n      <Consumer>\r\n        {\r\n          (value) => {\r\n            const { isLoading, isLoggedIn, user, signup, login, logout, edit } = value;\r\n\r\n            return (\r\n              <WrappedComponent\r\n                isLoggedIn={isLoggedIn}\r\n                isLoading={isLoading}\r\n                user={user}\r\n                signup={signup}\r\n                login={login}\r\n                logout={logout}\r\n                edit={edit}\r\n                {...props}\r\n\r\n              />\r\n            )\r\n          }\r\n        }\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport { AuthProvider, withAuth };","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport { withAuth } from '../../context/auth.context';\r\n\r\nfunction AnonRoute(routeProps) {\r\n  const { isLoggedIn, isLoading } = routeProps;\r\n\r\n  const { exact, path, redirectPath = \"/recipes\" } = routeProps;\r\n  const ComponentToShow = routeProps.component;\r\n\r\n  if(isLoading) return <p>Loading...</p>;\r\n  return (\r\n    <Route \r\n      exact={exact}\r\n      path={path}\r\n      render={\r\n        function(props) {\r\n          if(isLoggedIn) return <Redirect to={redirectPath} />\r\n          else if(!isLoggedIn) return <ComponentToShow {...props} />\r\n        }\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default withAuth(AnonRoute);","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport { withAuth } from '../../context/auth.context';\r\n\r\nfunction PrivateRoute(routeProps) {\r\n  const { isLoggedIn, isLoading } = routeProps;\r\n\r\n  const { exact, path } = routeProps;\r\n  const ComponentToShow = routeProps.component;\r\n\r\n  if(isLoading) return <p>Loading...</p>;\r\n  return (\r\n    <Route \r\n      exact={exact}\r\n      path={path}\r\n      render={\r\n        function(props) {\r\n          if(!isLoggedIn) return <Redirect to=\"/\" />\r\n          else if(isLoggedIn) return <ComponentToShow {...props} />\r\n        }\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default withAuth(PrivateRoute);","import axios from 'axios';\r\n\r\nexport default class RecipeService{\r\n  constructor(){\r\n    this.instance = axios.create({\r\n      baseURL: process.env.REACT_APP_API_URL,\r\n      withCredentials: true\r\n    })\r\n  }\r\n\r\n  create = data => this.instance.post(\"/recipes/\", data);\r\n  get = () => this.instance.get(\"/recipes/\");\r\n  getOne = id => this.instance.get(`/recipes/${id}`);\r\n  deleteOne = id => this.instance.delete(`/recipes/${id}`);\r\n  updateOne = (id, data) => this.instance.put(`/recipes/${id}`, data);\r\n}","import React, { Component } from 'react';\r\nimport RecipeService from '../../services/recipes.service';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './RecipeForm.css'\r\n\r\nconst validators = {\r\n    dishName: (value) => {\r\n        let message;\r\n        if (!value) {\r\n        message = \"Dish name is required\";\r\n        } else if (value.length < 3) {\r\n        message = \"Invalid dish name\";\r\n        }\r\n        return message;\r\n    },\r\n\r\n    ingredients: (value) => {\r\n        let message;\r\n        if (!value) {\r\n        message = \"Ingredients is required\";\r\n        } else if (value.length < 3) {\r\n        message = \"Invalid ingredients\";\r\n        }\r\n        return message;\r\n    },\r\n\r\n    preparation: (value) => {\r\n        let message;\r\n        if (!value) {\r\n        message = \"Preparation is required\";\r\n        } else if (value.length < 3) {\r\n        message = \"Invalid preparation\";\r\n        }\r\n        return message;\r\n    },\r\n\r\n    prepTime: (value) => {\r\n        let message;\r\n        if (!value) {\r\n        message = \"Prep time is required\";\r\n        }\r\n        return message;\r\n    },\r\n\r\n    howToCook: (value) => {\r\n        let message;\r\n        if (!value) {\r\n        message = \"How to cook is required\";\r\n        } else if (value.length < 3) {\r\n        message = \"Invalid how to cook\";\r\n        }\r\n        return message;\r\n    },\r\n    cousine: () => console.log(\"validator not needed\"),\r\n    type: () => console.log(\"validator not needed\"),\r\n    image: () => console.log(\"validator not needed\"),\r\n}\r\n\r\nexport default class RecipeForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        fields: {\r\n            dishName: \"\",\r\n            cousine: \"\",\r\n            type: \"\",\r\n            image: \"\",\r\n            ingredients: \"\",\r\n            prepTime: \"\",\r\n            preparation: \"\",\r\n            howToCook: \"\",\r\n            redirect: false,\r\n        },\r\n        errors: {\r\n            dishName: null,\r\n            cousine: null,\r\n            type: null,\r\n            image: null,\r\n            ingredients: null,\r\n            prepTime: null,\r\n            preparation: null,\r\n            howToCook: null,\r\n            }\r\n        }\r\n\r\n        this.recipeService = new RecipeService();\r\n    }\r\n\r\nhandleSubmit(event) {\r\n    event.preventDefault();\r\n    if(this.isValid()){\r\n        this.recipeService.create(this.state.fields)\r\n        .then(() => {\r\n            this.setState({\r\n                fields: {\r\n                    dishName: \"\",\r\n                    cousine: \"\",\r\n                    type: \"\",\r\n                    image: \"\",\r\n                    ingredients: \"\",\r\n                    prepTime: \"\",\r\n                    preparation: \"\",\r\n                    howToCook: \"\",\r\n                    redirect: true,\r\n                    },\r\n                errors: {\r\n                    dishName: null,\r\n                    cousine: null,\r\n                    type: null,\r\n                    image: null,\r\n                    ingredients: null,\r\n                    prepTime: null,\r\n                    preparation: null,\r\n                    howToCook: null,\r\n                    }\r\n                });\r\n            })\r\n        .catch(err => console.error(err))\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n        fields: {\r\n            ...this.state.fields,\r\n            [name]: value\r\n        },\r\n        errors: {\r\n            ...this.state.errors,\r\n            [name]: validators[name](value)\r\n        }\r\n        });\r\n    }\r\n\r\n    isValid() {\r\n        const { errors } = this.state;\r\n        return !Object.keys(errors).some(key => errors[key]);\r\n    }\r\n\r\n    update(){\r\n        this.recipeService.updateOne(this.state.id, (this.state.fields))\r\n        .then(() => {\r\n          this.refreshState();\r\n        })\r\n        .catch((err) => console.error(err))\r\n    }\r\n    \r\n    render() {\r\n        const { fields, errors } = this.state;\r\n        if (fields.redirect){\r\n            return <Redirect to=\"/recipes\" />;\r\n        }\r\n        return (\r\n            <div className=\"field-box\">\r\n                <form onSubmit={(event) => this.handleSubmit(event)} >\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"dishName\">Dish name: </label>\r\n                        <input className={`${errors.dishName ? \"error-input\" : \"\"}`} type=\"text\" name=\"dishName\" value={fields.dishName} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.dishName && <p style={{ color: 'red' }}>{errors.dishName}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"cousine\">Cousine: </label>\r\n                        <input className={`${errors.cousine ? \"error-input\" : \"\"}`} type=\"text\" name=\"cousine\" value={fields.cousine} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.cousine && <p style={{ color: 'red' }}>{errors.cousine}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"type\">Type: </label>\r\n                        <input className={`${errors.type ? \"error-input\" : \"\"}`} type=\"text\" name=\"type\" value={fields.type} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.type && <p style={{ color: 'red' }}>{errors.type}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"image\">Image: </label>\r\n                        <input className={`${errors.image ? \"error-input\" : \"\"}`} type=\"text\" name=\"image\" value={fields.image} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.image && <p style={{ color: 'red' }}>{errors.image}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"ingredients\">Ingredients: </label>\r\n                        <input className={`${errors.ingredients ? \"error-input\" : \"\"}`} type=\"text\" name=\"ingredients\" value={fields.ingredients} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.ingredients && <p style={{ color: 'red' }}>{errors.ingredients}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"prepTime\">Prep time: </label>\r\n                        <input className={`${errors.prepTime ? \"error-input\" : \"\"}`} type=\"text\" name=\"prepTime\" value={fields.prepTime} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.prepTime && <p style={{ color: 'red' }}>{errors.prepTime}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"preparation\">Preparation: </label>\r\n                        <input className={`${errors.preparation ? \"error-input\" : \"\"}`} type=\"text\" name=\"preparation\" value={fields.preparation} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.preparation && <p style={{ color: 'red' }}>{errors.preparation}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"howToCook\">How to cook: </label>\r\n                        <input className={`${errors.howToCook ? \"error-input\" : \"\"}`} type=\"text\" name=\"howToCook\" value={fields.howToCook} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.howToCook && <p style={{ color: 'red' }}>{errors.howToCook}</p>}\r\n                    </div>\r\n                        <button className=\"create-bt-frm\" disabled={!this.isValid()} type=\"submit\">Create</button>\r\n                </form>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport RecipeForm from '../../components/RecipeForm/RecipeForm'\r\nimport { Link } from 'react-router-dom';\r\nimport './CreateRecipe.css';\r\n\r\nexport default function CreateRecipe() {\r\n    return (\r\n        <div className=\"title-box\">\r\n            <h2 className=\"title-text\">CREATING A DISH</h2>\r\n            <RecipeForm />\r\n            <Link className=\"home-bt\" to=\"/recipes\">Home</Link>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withAuth } from '../../context/auth.context';\r\nimport { withRouter } from 'react-router';\r\nimport RecipesService from '../../services/recipes.service';\r\nimport './EditRecipe.css';\r\n\r\nconst validators = {\r\n    dishName: (value) => {\r\n        let message;\r\n        if (!value) {\r\n        message = \"Dish name is required\";\r\n        } else if (value.length < 3) {\r\n        message = \"Invalid dish name\";\r\n        }\r\n        return message;\r\n    },\r\n\r\n    ingredients: (value) => {\r\n        let message;\r\n        if (!value) {\r\n        message = \"Ingredients is required\";\r\n        } else if (value.length < 3) {\r\n        message = \"Invalid ingredients\";\r\n        }\r\n        return message;\r\n    },\r\n\r\n    preparation: (value) => {\r\n        let message;\r\n        if (!value) {\r\n        message = \"Preparation is required\";\r\n        } else if (value.length < 3) {\r\n        message = \"Invalid preparation\";\r\n        }\r\n        return message;\r\n    },\r\n\r\n    prepTime: (value) => {\r\n        let message;\r\n        if (!value) {\r\n        message = \"Prep time is required\";\r\n        }\r\n        return message;\r\n    },\r\n\r\n    howToCook: (value) => {\r\n        let message;\r\n        if (!value) {\r\n        message = \"How to cook is required\";\r\n        } else if (value.length < 3) {\r\n        message = \"Invalid how to cook\";\r\n        }\r\n        return message;\r\n    },\r\n    cousine: () => console.log(\"validator not needed\"),\r\n    type: () => console.log(\"validator not needed\"),\r\n    image: () => console.log(\"validator not needed\"),\r\n}\r\n\r\nclass EditRecipe extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        fields: {\r\n            dishName: \"\",\r\n            cousine: \"\",\r\n            type: \"\",\r\n            image: \"\",\r\n            ingredients: \"\",\r\n            prepTime: \"\",\r\n            preparation: \"\",\r\n            howToCook: \"\",\r\n        },\r\n        errors: {\r\n            dishName: null,\r\n            cousine: null,\r\n            type: null,\r\n            image: null,\r\n            ingredients: null,\r\n            prepTime: null,\r\n            preparation: null,\r\n            howToCook: null,\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if(this.isValid()){\r\n            const id = this.props.match.params.id\r\n            const uploadData = this.state.fields\r\n            this.props.updateOne(id, uploadData);\r\n\r\n            // RecipesService.updateOne(id, uploadData)\r\n            // .then(() => {\r\n            //     this.props.updateOne(id, uploadData);\r\n            //     console.log('updated')\r\n            // })\r\n            // .catch((err) => console.error(err))\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n        fields: {\r\n            ...this.state.fields,\r\n            [name]: value\r\n        },\r\n        errors: {\r\n            ...this.state.errors,\r\n            [name]: validators[name](value)\r\n        }\r\n        });\r\n    }\r\n\r\n    isValid() {\r\n        const { errors } = this.state;\r\n        return !Object.keys(errors).some(key => errors[key]);\r\n    }\r\n\r\n    render() {\r\n        const { fields, errors } = this.state;\r\n        return (\r\n        <div className=\"title-box\">\r\n            <h2 className=\"title-text\">UPDATE MY DISH</h2>\r\n            <div className=\"field-box\">\r\n                <form onSubmit={(event) => this.handleSubmit(event)} >\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"dishName\">Dish name: </label>\r\n                        <input className={`${errors.dishName ? \"error-input\" : \"\"}`} type=\"text\" name=\"dishName\" value={fields.dishName} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.dishName && <p style={{ color: 'red' }}>{errors.dishName}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"cousine\">Cousine: </label>\r\n                        <input className={`${errors.cousine ? \"error-input\" : \"\"}`} type=\"text\" name=\"cousine\" value={fields.cousine} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.cousine && <p style={{ color: 'red' }}>{errors.cousine}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"type\">Type: </label>\r\n                        <input className={`${errors.type ? \"error-input\" : \"\"}`} type=\"text\" name=\"type\" value={fields.type} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.type && <p style={{ color: 'red' }}>{errors.type}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"image\">Image: </label>\r\n                        <input className={`${errors.image ? \"error-input\" : \"\"}`} type=\"text\" name=\"image\" value={fields.image} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.image && <p style={{ color: 'red' }}>{errors.image}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"ingredients\">Ingredients: </label>\r\n                        <input className={`${errors.ingredients ? \"error-input\" : \"\"}`} type=\"text\" name=\"ingredients\" value={fields.ingredients} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.ingredients && <p style={{ color: 'red' }}>{errors.ingredients}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"prepTime\">Prep time: </label>\r\n                        <input className={`${errors.prepTime ? \"error-input\" : \"\"}`} type=\"text\" name=\"prepTime\" value={fields.prepTime} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.prepTime && <p style={{ color: 'red' }}>{errors.prepTime}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"preparation\">Preparation: </label>\r\n                        <input className={`${errors.preparation ? \"error-input\" : \"\"}`} type=\"text\" name=\"preparation\" value={fields.preparation} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.preparation && <p style={{ color: 'red' }}>{errors.preparation}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"howToCook\">How to cook: </label>\r\n                        <input className={`${errors.howToCook ? \"error-input\" : \"\"}`} type=\"text\" name=\"howToCook\" value={fields.howToCook} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.howToCook && <p style={{ color: 'red' }}>{errors.howToCook}</p>}\r\n                    </div>\r\n                    <button className=\"update-bt\" disabled={!this.isValid()} type=\"submit\">Update Recipe</button>\r\n                </form>\r\n            </div>\r\n            <Link className=\"home-bt\" to=\"/recipes\">Home</Link>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withAuth(withRouter(EditRecipe));","import React, { Component } from 'react'\r\nimport { withAuth } from '../../context/auth.context';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router';\r\nimport './EditUser.css';\r\nimport RecipesService from '../../services/recipes.service';\r\n\r\nconst validators = {\r\n    username: (value) => {\r\n        let message;\r\n        if (!value) {\r\n        message = \"Username name is required\";\r\n        } else if (value.length < 5) {\r\n        message = \"Invalid username\";\r\n        }\r\n        return message;\r\n    },\r\n\r\n    password: (value) => {\r\n        let message;\r\n        if (!value) {\r\n        message = \"Password is required\";\r\n        } else if (value.length < 5) {\r\n        message = \"Invalid password\";\r\n        }\r\n        return message;\r\n    },\r\n\r\n    email: (value) => {\r\n        let message;\r\n        if (!value) {\r\n        message = \"email is required\";\r\n        } else if (value.length < 5) {\r\n        message = \"Invalid email\";\r\n        }\r\n        return message;\r\n    },\r\n}\r\n\r\nclass EditUser extends Component {\r\n    constructor(props){\r\n    super(props);\r\n        this.state = {\r\n            fields: {\r\n                username: \"\",\r\n                password: \"\",\r\n                email: \"\",\r\n            },\r\n            errors: {\r\n                username: null,\r\n                password: null,\r\n                email: null,\r\n            }\r\n        }\r\n    }\r\n  \r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        if(this.isValid()){\r\n            const id = this.props.match.params.id\r\n            const uploadData = this.state.fields\r\n            this.props.uploadOne(id, uploadData);\r\n            \r\n            // RecipesService.updateOne(id, uploadData)\r\n            // .then(() => {\r\n            //     this.props.updateOne(id, uploadData);\r\n            //     console.log('updated')\r\n            // })\r\n            // .catch((err) => console.error(err))\r\n        }\r\n    }\r\n  \r\n    handleChange(event){\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            fields: {\r\n                ...this.state.fields,\r\n                [name]: value\r\n            },\r\n            errors: {\r\n                ...this.state.errors,\r\n                [name]: validators[name](value)\r\n            }\r\n        })\r\n    }\r\n\r\n    isValid() {\r\n        const { errors } = this.state;\r\n        return !Object.keys(errors).some(key => errors[key]);\r\n    }\r\n\r\n    render() {\r\n        const { fields, errors } = this.state;\r\n        return (\r\n        <div className=\"title-box\">\r\n            <h2 className=\"title-text\">CHEF PROFILE</h2>\r\n            <div className=\"field-box\">\r\n                <form onSubmit={(event) => this.handleSubmit(event)} >\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"username\">Username: </label>\r\n                        <input className={`${errors.username ? \"error-input\" : \"\"}`} type=\"text\" name=\"username\" value={fields.username} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.username && <p style={{ color: 'red' }}>{errors.username}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"email\">Email: </label>\r\n                        <input className={`${errors.email ? \"error-input\" : \"\"}`} type=\"text\" name=\"email\" value={fields.email} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.email && <p style={{ color: 'red' }}>{errors.email}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"password\">Password: </label>\r\n                        <input className={`${errors.password ? \"error-input\" : \"\"}`} type=\"text\" name=\"password\" value={fields.password} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.password && <p style={{ color: 'red' }}>{errors.password}</p>}\r\n                    </div>\r\n                    <button className=\"update-bt\" onClick={(data) => this.props.edit(data)} disabled={!this.isValid()} type=\"submit\">Update Chef</button>\r\n                </form>\r\n            </div>\r\n            <Link className=\"home-bt\" to=\"/recipes\">Home</Link>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n  \r\n  export default withAuth(withRouter(EditUser));","//LOGIN\r\n\r\nimport React, { Component } from 'react';\r\nimport { withAuth } from '../../context/auth.context';\r\nimport { Link } from 'react-router-dom';\r\nimport './Home.css';\r\n\r\nconst validators = {\r\n  username: (value) => {\r\n    let message;\r\n    if(!value){\r\n        message = 'Username is required';\r\n        }\r\n        return message;\r\n    },\r\n\r\n  password: (value) => {\r\n    let message;\r\n    if(!value){\r\n        message = 'Password is required';\r\n        } else if(value.length < 5){\r\n        message = 'Invalid password'\r\n        }\r\n        return message;\r\n    },\r\n}\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n    super(props);\r\n        this.state = {\r\n            fields: {\r\n                username: \"\",\r\n                password: \"\"\r\n            },\r\n            errors: {\r\n                username: null,\r\n                password: null\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        if(this.isValid()){\r\n            this.props.login(this.state.fields);\r\n        }\r\n    }\r\n\r\n    handleChange(event){\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n        fields: {\r\n            ...this.state.fields,\r\n            [name]: value\r\n        },\r\n        errors: {\r\n            ...this.state.errors,\r\n            [name]: validators[name](value)\r\n        }\r\n        })\r\n    }\r\n\r\n    isValid() {\r\n        const { errors } = this.state;\r\n        return !Object.keys(errors).some(key => errors[key]);\r\n    }\r\n\r\n    render() {\r\n        const { fields } = this.state;\r\n        return (\r\n            <div className=\"home-box\">\r\n                <form className=\"form-box\" onSubmit={(e) => this.handleSubmit(e)}>\r\n                    <input className=\"login-field\" type=\"text\" name=\"username\" value={fields.username} onChange={(e) => this.handleChange(e)} placeholder=\"Username:\"/>\r\n                    <input className=\"login-field\" type=\"password\" name=\"password\" value={fields.password} onChange={(e) => this.handleChange(e)} placeholder=\"Password:\"/>\r\n                    <button className=\"login-field\" disabled={!this.isValid() || !fields.username || !fields.password} type=\"submit\">Login</button>\r\n                </form>\r\n                <Link to=\"/signup\">\r\n                    <button className=\"signup-bt\" >Signup</button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withAuth(Login);","import React from 'react';\r\nimport './RecipeCard.css'\r\nimport { Link } from 'react-router-dom';\r\nimport RecipesService from '../../services/recipes.service';\r\nimport { withAuth } from '../../context/auth.context';\r\n\r\nfunction RecipeCard ({ id, dishName, cousine, type, image, ingredients, prepTime, preparation, howToCook, refreshState}) {\r\n  \r\n  const recipesService = new RecipesService();\r\n\r\n  const deleteRecipe = () => {\r\n    recipesService.deleteOne(id)\r\n    .then(() => {\r\n      refreshState();\r\n    })\r\n    .catch((err) => console.error(err))\r\n  }\r\n\r\n  return(\r\n    <div className=\"card\">\r\n      <div className=\"img-container\">\r\n        <Link class=\"photo\" to={`/recipes/${id}`}>\r\n          <img src={image} alt={dishName} />\r\n        </Link>\r\n      </div>\r\n      <h3 className=\"card-title\">{dishName}</h3>\r\n      <div className=\"card-text-container\">\r\n        <p className=\"card-text\">{cousine}</p>\r\n        <p className=\"card-text\">{type}</p>\r\n        <p className=\"card-text\">{prepTime}</p>\r\n      </div>\r\n        <p className=\"card-text\">{ingredients && ingredients}</p>\r\n        <p className=\"card-text\">{preparation && preparation}</p>\r\n        <p className=\"card-text\">{howToCook && howToCook}</p>\r\n      <div className=\"buttons-recipe-card\">\r\n        {<Link to={`/edit-recipe/${id}`}>\r\n          <button className=\"corner-left\">Edit</button>\r\n        </Link>}\r\n        <button className=\"corner-right\" onClick={() => deleteRecipe()}>Delete</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withAuth(RecipeCard);","import React from 'react'\r\nimport RecipeCard from '../RecipeCard/RecipeCard';\r\nimport RecipesService from '../../services/recipes.service'\r\nimport './MyRecipes.css'\r\nimport { withAuth } from '../../context/auth.context';\r\n\r\nclass MyRecipes extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            recipes: []\r\n        }\r\n        this.recipesService = new RecipesService();\r\n    }\r\n\r\n    refreshState(){\r\n        this.recipesService.get()\r\n        .then(res => {\r\n            this.setState({ recipes: res.data })\r\n        })\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.refreshState();\r\n    }\r\n\r\n    displayRecipes(){\r\n        return this.state.recipes.map((recipe) => {\r\n            return (\r\n                <RecipeCard id={recipe.id} dishName={recipe.dishName} cousine={recipe.cousine} type={recipe.type} image={recipe.image} prepTime={recipe.prepTime} refreshState={() => this.refreshState()} key={recipe.id} />\r\n            )\r\n        })\r\n    }\r\n\r\n    handleLogout = () => {\r\n        this.props.logout();\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"recipes-container\">\r\n                {this.state.recipes.length === 0 ? <h2>Lets get dirt, start to cook and create your first Recipe</h2> :\r\n                    this.displayRecipes()\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withAuth(MyRecipes);","import React from 'react'\r\nimport MyRecipes from '../../components/MyRecipes/MyRecipes';\r\nimport { Link } from 'react-router-dom';\r\nimport './Recipes.css'\r\n\r\nexport default function Main() {\r\n    return (\r\n        <div className=\"main-recipes\">\r\n            <Link to=\"/create-recipe\">\r\n                <button className=\"new-recipe\">Create New Recipe</button>\r\n            </Link>\r\n            <div className=\"cards-container\">\r\n                <MyRecipes />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './RecipeDetail.css'\r\nimport { Link } from 'react-router-dom';\r\nimport RecipesService from '../../services/recipes.service';\r\nimport { withAuth } from '../../context/auth.context';\r\n\r\nfunction RecipeDetail ({ id, dishName, cousine, type, image, ingredients, prepTime, preparation, howToCook, refreshState}) {\r\n  //props.match.params.id\r\n\r\n    const recipesService = new RecipesService();\r\n\r\n  const deleteRecipe = () => {\r\n    recipesService.deleteOne(id)\r\n    .then(() => {\r\n      refreshState();\r\n    })\r\n    .catch((err) => console.error(err))\r\n  }\r\n\r\n  return(\r\n    <div className=\"card-dt\">\r\n      <div className=\"img-container-dt\">\r\n          <img className=\"photo-dt\" src={image} alt={dishName} />\r\n      </div>\r\n      <h3 className=\"card-title-dt\">{dishName}</h3>\r\n      <div className=\"card-text-container-dt\">\r\n        <p className=\"card-text-dt\">{cousine}</p>\r\n        <p className=\"card-text-dt\">{type}</p>\r\n        <p className=\"card-text-dt\">{prepTime}</p>\r\n        <p className=\"card-text-dt\">{ingredients}</p>\r\n        <p className=\"card-text-dt\">{preparation}</p>\r\n        <p className=\"card-text-dt\">{howToCook}</p>\r\n      <div className=\"buttons-recipe-card-dt\">\r\n        {<Link to={`/edit-recipe/${id}`}>\r\n          <button className=\"corner-left-dt\">Edit</button>\r\n        </Link>}\r\n        <button className=\"corner-right-dt\" onClick={() => deleteRecipe()}>Delete</button>\r\n      </div>\r\n    </div>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default withAuth(RecipeDetail);","import { render } from '@testing-library/react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport RecipeDetail from '../../components/RecipeDetail/RecipeDetail';\r\nimport RecipesService from '../../services/recipes.service'\r\nimport Classes from './Recipe.module.css'\r\nimport { withRouter } from 'react-router';\r\n\r\n  //this.props.match.params.id\r\nclass RecipesDetail extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            recipe: ''\r\n        }\r\n        this.recipesService = new RecipesService();\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.refreshState();\r\n  }\r\n\r\n    refreshState(){\r\n      this.recipesService.getOne(this.props.match.params.id)\r\n      .then(res => {\r\n          this.setState({ recipe: res.data })\r\n      })\r\n      .catch(err => console.error(err))\r\n  }\r\n  \r\nrender(){\r\n  return (\r\n    <div>\r\n      <div className=\"title-box-rd\">\r\n        <p className=\"title-text-rd\">COME WITH ME IF YOU WANT EAT</p>\r\n      </div>\r\n      <div className=\"recipe-detail-box\">\r\n        <RecipeDetail { ...this.state.recipe }/>\r\n        <div className=\"detail-bt\">\r\n          <Link to=\"/recipes\">\r\n            <button className=\"recipe-rd\">Back to my Creations</button>\r\n          </Link>\r\n          <Link to=\"/create-recipe\">\r\n            <button className=\"recipe-rd\">Create new Recipe</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )}\r\n  }\r\n\r\n  export default withRouter(RecipesDetail);","import React, { Component } from 'react';\r\nimport AuthService from '../../services/auth.service';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './UserForm.css'\r\n\r\nconst EMAIL_PATTERN = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/ \r\n\r\nconst validators = {\r\n    username: (value) => {\r\n        let message;\r\n        if (!value) {\r\n        message = \"Username name is required\";\r\n        } else if (value.length < 3) {\r\n        message = \"Invalid username\";\r\n        }\r\n        return message;\r\n    },\r\n\r\n    password: (value) => {\r\n        let message;\r\n        if (!value) {\r\n        message = \"Password is required\";\r\n        } else if (value.length < 3) {\r\n        message = \"Invalid password\";\r\n        }\r\n        return message;\r\n    },\r\n\r\n    email: (value) => {\r\n        let message;\r\n        if (!value) {\r\n        message = \"email is required\";\r\n        } else if(!EMAIL_PATTERN.test(value)){\r\n        message = 'Invalid email';\r\n        }\r\n    return message;\r\n},\r\n}\r\n\r\nexport default class UserForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        fields: {\r\n            username: \"\",\r\n            password: \"\",\r\n            email: \"\",\r\n            redirect: false,\r\n        },\r\n        errors: {\r\n            username: null,\r\n            password: null,\r\n            email: null,\r\n            }\r\n        }\r\n        this.authService = new AuthService()\r\n    }\r\n\r\nhandleSubmit(event) {\r\n    event.preventDefault();\r\n    if(this.isValid()){\r\n        this.authService.signup(this.state.fields)\r\n        .then(() => {\r\n        this.setState({\r\n            fields: {\r\n                username: \"\",\r\n                password: \"\",\r\n                email: \"\",\r\n                redirect: true,\r\n                },\r\n            errors: {\r\n                username: null,\r\n                password: null,\r\n                email: null,\r\n                }\r\n            })\r\n        })\r\n        .catch(err => console.error(err))\r\n    }\r\n}\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n        fields: {\r\n            ...this.state.fields,\r\n            [name]: value\r\n        },\r\n        errors: {\r\n            ...this.state.errors,\r\n            [name]: validators[name](value)\r\n        }\r\n        });\r\n    }\r\n\r\n    isValid() {\r\n        const { errors } = this.state;\r\n        return !Object.keys(errors).some(key => errors[key]);\r\n    }\r\n\r\n    render() {\r\n        const { fields, errors } = this.state;\r\n        if (fields.redirect){\r\n            return <Redirect to=\"/recipes\" />;\r\n        }\r\n        return (\r\n            <div className=\"field-box\">\r\n                <form onSubmit={(event) => this.handleSubmit(event)} >\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"username\">Username: </label>\r\n                        <input className={`${errors.username ? \"error-input\" : \"\"}`} type=\"text\" name=\"username\" value={fields.username} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.username && <p style={{ color: 'red' }}>{errors.username}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"email\">Email: </label>\r\n                        <input className={`${errors.email ? \"error-input\" : \"\"}`} type=\"text\" name=\"email\" value={fields.email} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.email && <p style={{ color: 'red' }}>{errors.email}</p>}\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"password\">Password: </label>\r\n                        <input className={`${errors.password ? \"error-input\" : \"\"}`} type=\"text\" name=\"password\" value={fields.password} onChange={(event) => this.handleChange(event)} />\r\n                        {errors.password && <p style={{ color: 'red' }}>{errors.password}</p>}\r\n                    </div>\r\n                    <button className=\"update-bt\" disabled={!this.isValid()} type=\"submit\">Create Chef</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport UserForm from '../../components/UserForm/UserForm';\r\nimport './Signup.css';\r\n\r\nexport default function Signup() {\r\n    return (\r\n        <div className=\"title-box\">\r\n            <h2 className=\"title-text\">CREATING A CHEF</h2>\r\n            <UserForm />\r\n            <Link className=\"home-bt\" to=\"/\">Login</Link>\r\n        </div>\r\n    )\r\n}","import React from 'react'\nimport { Route, Switch } from 'react-router';\nimport AnonRoute from './components/AnounRoute/AnounRoute';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport CreateRecipe from './pages/CreateRecipe/CreateRecipe';\nimport EditRecipe from './pages/EditRecipe/EditRecipe';\nimport EditUser from './pages/EditUser/EditUser';\nimport Home from './pages/Home/Home';\nimport Recipes from './pages/Recipes/Recipes';\nimport Recipe from './pages/Recipe/Recipe';\nimport Signup from './pages/Signup/Signup';\nimport { withAuth } from './context/auth.context';\nimport { NavLink } from 'react-router-dom';\nimport './App.css'\n\nclass App extends React.Component {\n  state = {\n    user: null\n  }\n\n  componentDidMount() {\n    this.setState({ user: this.props.user})\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <nav className=\"navbar\">\n          <h2 className=\"nav-title\">YOUR OWN RECIPES APP</h2>\n          {this.props.user ? <button className=\"nav-bt\"onClick={() => this.props.logout()}><NavLink exact to=\"/\">Logout</NavLink></button> : null}\n          {this.props.user ? <button className=\"nav-bt\"><NavLink exact to=\"/edit-user/:id\">Edit User</NavLink></button> : null}\n        </nav>\n\n        <Switch>\n          <PrivateRoute path=\"/create-recipe\" component={CreateRecipe} />\n          <PrivateRoute exact path=\"/edit-recipe/:id\" component={EditRecipe} />\n          <PrivateRoute exact path=\"/edit-user/:id\" exact component={EditUser} />\n          <AnonRoute exact path=\"/\" component={Home} />\n          <PrivateRoute exact path=\"/recipes\" component={Recipes} />\n          <PrivateRoute exact path=\"/recipes/:id\" component={Recipe} />\n          <AnonRoute exact path=\"/signup\" exact component={Signup} />\n          <Route path=\"*\" render={() => \n            <div>\n              <p2>404 NOT FOUND</p2>\n              <img src=\"./resources/img/broaken-plate.jpg\" alt=\"Broaken Plate\"></img>\n            </div>} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { AuthProvider } from './context/auth.context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}